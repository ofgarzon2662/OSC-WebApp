name: Creation of PR from feature Branch to Develop
on:
  push:
    branches:
      - 'feature**'

permissions:
  contents: write
  pull-requests: write

jobs:
  tests:
    name: Tests
    if: ${{ contains(github.event.head_commit.message, 'DEPLOY') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to feature branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Merge Develop into feature branch
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source-branch: develop
          target-branch:  ${{ github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.20'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: |
          ng test --no-watch --browsers=ChromeHeadless --code-coverage | tee test-output.txt
          if grep -q "FAILED" test-output.txt; then
            echo "Tests failed, aborting workflow."
            exit 1
          fi

      - name: Extract and Validate Coverage for Statements, Lines, Branches, and Functions
        run: |
          # Extract coverage values from the coverage summary
          STATEMENTS_COVERAGE=$(grep -Po 'Statements\s*:\s*\K\d+(\.\d+)?' test-output.txt | awk '{print int($1)}')
          LINES_COVERAGE=$(grep -Po 'Lines\s*:\s*\K\d+(\.\d+)?' test-output.txt | awk '{print int($1)}')
          BRANCHES_COVERAGE=$(grep -Po 'Branches\s*:\s*\K\d+(\.\d+)?' test-output.txt | awk '{print int($1)}')
          FUNCTIONS_COVERAGE=$(grep -Po 'Functions\s*:\s*\K\d+(\.\d+)?' test-output.txt | awk '{print int($1)}')

          # Debug output for extracted values
          echo "Extracted Coverage Percentages:"
          echo "Statements: $STATEMENTS_COVERAGE%"
          echo "Lines: $LINES_COVERAGE%"
          echo "Branches: $BRANCHES_COVERAGE%"
          echo "Functions: $FUNCTIONS_COVERAGE%"

          # Check if coverage meets the threshold (70%)
          MIN_COVERAGE=70

          if [ "$STATEMENTS_COVERAGE" -lt $MIN_COVERAGE ]; then
            echo "❌ Statements coverage ($STATEMENTS_COVERAGE%) is below $MIN_COVERAGE%."
            exit 1
          fi
          if [ "$LINES_COVERAGE" -lt $MIN_COVERAGE ]; then
            echo "❌ Lines coverage ($LINES_COVERAGE%) is below $MIN_COVERAGE%."
            exit 1
          fi
          if [ "$BRANCHES_COVERAGE" -lt $MIN_COVERAGE ]; then
            echo "❌ Branches coverage ($BRANCHES_COVERAGE%) is below $MIN_COVERAGE%."
            exit 1
          fi
          if [ "$FUNCTIONS_COVERAGE" -lt $MIN_COVERAGE ]; then
            echo "❌ Functions coverage ($FUNCTIONS_COVERAGE%) is below $MIN_COVERAGE%."
            exit 1
          fi

          echo "✅ All coverage metrics meet the required threshold of $MIN_COVERAGE%!"

      - name: Coverage Passed
        run: echo "✅ Coverage is sufficient!"
